#import "theme://include/buttons.view"

// $view.sizer = -10 + $ui.size;

widget(container_y, {

  .alpha = 1 - iir(clamp(getLayer(), 0, 1), 7) * 0.5;
  .blur  = iir(clamp(getLayer(), 0, 1), 7);

  .padding = [0, $ui.size * 2];

  .spacing = $ui.size * 3;

  widget(container_x, {
    space(1);
    widget(backdrop, {
      .weight = 2;
      .filterConstraintX = true;
      .alphaSelf = $view.searchAlpha;
      .color = [0.45, 0.45, 0.5];
      .source = "theme://graphics/shadedplate.png";
      .border =  [4, 4, 4, 4];
      .padding = [0, -2, -2, -2];
      
      widget(container_x, {
	.filterConstraintX = true;
        widget(icon, {
          .source = "theme://svg/Search.svg";
	  .sizeScale = 1.5;
          .alpha = $view.searchAlpha;
        });

        widget(backdrop, {
          .weight = 2;
          .filterConstraintX = true;
          .color = [0.0, 0.0, 0.0];
          .source = "theme://graphics/shadedplate.png";
          .border =  [4, 4, 4, 4];
          .padding = [0, -2, 0, -2];
	  
          widget(text, {
            bind($view.searchQuery);
	    .sizeScale = 1.5;
            .focusable = 0.7;
            $view.searchAlpha = 0.3 + iir(isFocused() * 0.7, 8) + isHovered() * 0.1;
	    
	    onEvent(enter, navOpen("search:" + $view.searchQuery));
          });
	});
      });
    });
    space(1);
  });

  widget(array, {
    $view.sizer = int(getWidth() / 100);

    .margin = [$view.sizer * 3, 0];


    .Xspacing = $view.sizer * 3;
    .Yspacing = $view.sizer * 3;

    .childTilesX = 6;
    .childTilesY = 3;

    cloner(propSorter($global.sources, "node.title"), displacement, {
      .focusable = true;
      .padding = $view.sizer * -1.5 * iir(isHovered() || isFocused(), 3) + $view.sizer * iir(isPressed(), 3);

      onEvent(activate, select($ui.fancyAnimations,
			       navOpen($self.url, void, $self),
			       navOpen($self.url)));
      widget(container_y, {
	.spacing = 5;
	widget(detachable, {
	  widget(container_z, {
	    widget(backdrop, {
	      .source = "theme://graphics/boxbg.png";
	      .border = 12;
	      .padding = -4;
	      .color = 0.3 + isHovered() * 0.4 + isFocused() * 0.4 + isPressed() * 0.4;
	      widget(image, {
		.color = 0.5 + isHovered() * 0.4 + isFocused() * 0.4 + isPressed() * 0.4;
		
		.source = $self.icon ?? 
		  "theme://svg/" + 
		  translate($self.type, "Folder",
			    "music",    "Music",
			    "video",    "Movie",
			    "tv",       "Display",
			    "usb",      "Usb",
			    "dvd",      "Disc",
			    "cd",       "Disc",
			    "bluray",   "Disc",
			    "photos",   "Pictures") + ".svg";
	      });
	    });
	    widget(backdrop, {
	      .source = "theme://graphics/boxgloss.png";
	      .border = 12;
	      .alpha = iir(0.2 + isHovered() * 0.2 + isFocused() * 0.2 + isPressed() * 0.2 , 5);
	      .additive = true;
	      
	    });
	  });
	});
	widget(label, {
	  .color = 0.3 + isHovered() * 0.4 + isFocused() * 0.4 + isPressed() * 0.4;
	  .caption = $self.title;
	  .align = center;
	  .ellipsize = true;
	  .shadow = true;
	});
      });
    });
  });
});
