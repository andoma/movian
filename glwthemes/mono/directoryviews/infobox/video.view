#import "theme://include/separators.view"

widget(container_y, {
  .spacing = 10;

  widget(label, {
    .caption = $args.metadata.title;
    .ellipsize = true;
    .sizeScale = 1.5;
  });
  widget(label, {
    .hidden = select($args.metadata.year, false, true);
    .caption = $args.metadata.year;
    .ellipsize = true;
    .sizeScale = 1;
  });

  widget(container_x, {
    .spacing = 10;
    widget(image, {
      .height = $ui.size * 10;
      .aspectConstraint = true;
      .source = $args.metadata.icon;
      .hidden = select($args.metadata.icon, false, true);
    });
    
    widget(container_y, {

      widget(container_x, {
	.filterConstraintX = true;
	.spacing = 15;
	widget(container_y, {
	  widget(label, {
	    .hidden = select($args.metadata.duration, 0, 1);
	    .color = [0.5, 0.5, 0.5];
	    .caption = "Duration:";
	  });


	  widget(label, {
	    .hidden = select($args.metadata.director, 0, 1);
	    .color = [0.5, 0.5, 0.5];
	    .caption = "Director:";
	  });

	  widget(label, {
	    .hidden = select($args.metadata.actor, 0, 1);
	    .color = [0.5, 0.5, 0.5];
	    .caption = "Actors:";
	  });
	});

	widget(container_y, {
	  .filterConstraintX = true;
	
	  widget(label, {
	    .hidden = select($args.metadata.duration, 0, 1);
	    .caption = value2duration($args.metadata.duration);
	  });


	  widget(label, {
	    .hidden = select($args.metadata.director, 0, 1);
	    .caption = $args.metadata.director;
	  });

	  widget(label, {
	    .hidden = select($args.metadata.actor, 0, 1);
	    .maxlines = 2;
	    .caption = $args.metadata.actor;
	  });
	});
      });
    });
  });
  widget(label, {
    .caption = $args.metadata.description;
    .maxlines = 10;
    .ellipsize = true;
    .sizeScale = 0.8;
  });

  HORIZONTAL_SEPARATOR();

  widget(container_y, {
    widget(label, {
      .color = 0.6;
      .caption = $args.metadata.format;
      .ellipsize = true;
    });

    widget(label, {
      .padding = [0,10,0,0];
      .hidden = !count($args.metadata.videostreams);
      .color = 0.6;
      .sizeScale = 0.8;
      .caption = "Video:";
    });
    cloner($args.metadata.videostreams, container_x, {
      widget(label, {
	.color = 0.6;
	.caption = $self.longformat;
	.ellipsize = true;
      });
    });

    widget(label, {
      .padding = [0,10,0,0];
      .hidden = !count($args.metadata.audiostreams);
      .color = 0.6;
      .sizeScale = 0.8;
      .caption = "Audio:";
    });

    cloner($args.metadata.audiostreams, container_x, {
      widget(label, {
	.color = 0.6;
	.caption = $self.longformat;
	.filterConstraintX = true;
	.ellipsize = true;
      });
      widget(label, {
	.autohide = true;
	.color = 0.6;
	.caption = $self.language;
      });
    });

    widget(label, {
      .padding = [0,10,0,0];
      .hidden = !count($args.metadata.subtitlestreams);
      .color = 0.6;
      .sizeScale = 0.8;
      .caption = "Subtitles:";
    });

    cloner($args.metadata.subtitlestreams, container_x, {
      widget(label, {
	.color = 0.6;
	.caption = $self.longformat;
	.filterConstraintX = true;
	.ellipsize = true;
      });
      widget(label, {
	.autohide = true;
	.color = 0.6;
	.caption = $self.language;
      });
    });
  });

  HORIZONTAL_SEPARATOR();

  widget(label, {
    .color = 0.6;
    // Need plural forms in localization
    .caption = fmt(_("Played %d times"), $args.playcount);
  });
});