#import "cmdmenu_common.view"


$view.page = 0;

onEvent(back,   { $view.page = 0; }, $view.page);
onEvent(cancel, { $view.page = 0; }, $view.page);

widget(deck, {

  effect: slideHorizontal;
  time: 0.25;

  commandMenuChrome(

    SEP(_("Video menu"));

    ITEM(_("Audio tracks"), {
      $view.page = 1;
    }, "dataroot://resources/svg/Music.svg");
    
    ITEM(_("Subtitle tracks"), {
      $view.page = 2;
    }, "dataroot://resources/svg/Script.svg");

    ITEM(_("Seek by time"), {
      $view.page = 6;
    }, "dataroot://resources/svg/SeekByFrame.svg",
	 $global.media.current.seekindex.available);

    ITEM(_("Chapters"), {
      $view.page = 7;
    }, "dataroot://resources/svg/Book.svg",
	 $global.media.current.chapterindex.available);

    SEP(_("Settings"));

    ITEM(_("Audio"), {
      $view.page = 3;
    }, "dataroot://resources/svg/Music.svg");

    ITEM(_("Subtitles"), {
      $view.page = 4;
    }, "dataroot://resources/svg/Script.svg");

    ITEM(_("Video"), {
      $view.page = 5;
    }, "dataroot://resources/svg/Movie.svg");

  );


  // Page 1 - Audio tracks

  commandMenuChrome(

    SEP(_("Audio tracks"));


    cloner($self.media.metadata.audiostreams, backdrop, {
      onEvent(activate, selectAudioTrack($self.url));
      focusable: true;
      source: "skin://pages/listitems/highlight.png";
      alphaSelf: iir(isFocused() * 1, 8) + isHovered() * 0.1;

      widget(container_x, {
	alpha: 0.6 + iir(isFocused(), 6);
	widget(icon, {
	  source: "dataroot://resources/svg/Check.svg";
	  shadow: true;
	  alpha: iir($self.url == $parent.media.audio.current, 8);
	});

	widget(label, {
	  weight: 2;
	  TextStyleItem();
	  caption: $self.title;
	  filterConstraintX: true;
	});

	widget(label, {
	  weight: 2;
	  TextStyleItem();
	  caption: $self.language;
	  filterConstraintX: true;
	});

	widget(label, {
	  TextStyleItem();
	  caption: $self.format;
	});
      });
    });


  );

  // Page 2 - Subtitle tracks

  commandMenuChromeWide(

    SEP(_("Subtitles"));

    cloner(propSorter($self.media.metadata.subtitlestreams,
		      sort, "node.score", true, false), backdrop, {
      onEvent(activate, selectSubtitleTrack($self.url));
      focusable: true;
      source: "skin://pages/listitems/highlight.png";
      alphaSelf: iir(isFocused() * 1, 8) + isHovered() * 0.1;

      widget(container_x, {
	alpha: 0.6 + iir(isFocused(), 6);
	spacing: $ui.size / 2;
	widget(icon, {
	  source: "dataroot://resources/svg/Check.svg";
	  shadow: true;
	  alpha: iir($self.url == $parent.media.subtitle.current, 8);
	});

	widget(label, {
	  weight: 4;
	  TextStyleItem();
	  caption: $self.title;
	  filterConstraintX: true;
	});

	widget(label, {
	  weight: 1;
	  TextStyleItem();
	  caption: $self.language;
	  filterConstraintX: true;
	});

	widget(label, {
	  weight: 0.5;
	  TextStyleItem();
	  caption: $self.format;
	  filterConstraintX: true;
	});

	widget(label, {
	  weight: 2;
	  TextStyleItem();
	  caption: $self.source;
	  filterConstraintX: true;
	});

/*
	widget(label, {
	  weight: 0.5;
	  TextStyleItem();
	  caption: $self.score;
	  filterConstraintX: true;
	});
*/
      });
    });
    
  );


  // Page 3 - Audio settings

  commandMenuChromeWide(

    SEP(_("Audio settings"));

    cloner($self.media.audio.settings.nodes, loader, {
      source: "skin://pages/listitems/" + $self.type + ".view";
      time: 0.3;
      noInitialTransform: true;
    });
  );


  // Page 4 - Subtitle settings

  commandMenuChromeWide(

    SEP(_("Subtitle settings"));

    cloner($self.media.subtitle.settings.nodes, loader, {
      source: "skin://pages/listitems/" + $self.type + ".view";
      time: 0.3;
      noInitialTransform: true;
    });
  );

  // Page 5 - Video settings

  commandMenuChromeWide(

    SEP(_("Video settings"));

    cloner($self.media.video.settings.nodes, loader, {
      source: "skin://pages/listitems/" + $self.type + ".view";
      time: 0.3;
      noInitialTransform: true;
    });
  );

  // Page 6 - Seek by time


  commandMenuChromeUltraWide(
    widget(container_y, {
      space(1);
    widget(fader, {
      height: $ui.size * 8;
      weight: 1;
      plane: [0,1,0,1];
      alphaFallOff: 1;
      blurFallOff: 0.2;
      widget(mirror, {
	alpha: 0.4;
	widget(list_x, {
	  spacing: 5;

	  scrollThreshold: $ui.width / 10;
//	  alphaFallOff: 0.1;
//	  blurFallOff: 0.1;
	  
	    &self.focused = focusedChild();
	  
	  cloner($global.media.current.seekindex.positions, container_z, {
	    width: $ui.size * 14.2222;
	    
	    focusable: true;
	    onEvent(activate, {
	      $global.media.current.currenttime = $self.timestamp;
	    });
	    
	  widget(backdrop, {
	    alpha: select($clone.ready, 0, 1);
	    align: bottom;
	  
	    source: "skin://graphics/white.png";
	    color: 0;
	  });
	    
	    widget(image, {
	      align: bottom;
	      
	      $clone.ready = isReady();
	      source: $self.image;
	      color: isFocused() + 0.6;
	    });
	    
	    
	    widget(label, {
	      align: bottom;
	      shadow: true;
	      outline: true;
	      caption: value2duration($self.timestamp, true);
	      color: isFocused() + 0.6;
	    });
	    
	    widget(backdrop, {
	      source: "skin://graphics/border16o.png";
	      border: 8;
	      borderOnly: true;
	      color: isFocused();
	    });
	    
	    widget(container_y, {
	      space(1);
	      widget(throbber, {
		alpha: iir(!$clone.ready, 8);
	      });
	      space(1);
	    });
	  });
	});
      });
    });
      space(1);
    });
  );


  // Page 7 - Chapters

  commandMenuChromeWide(

    SEP(_("Chapters"));

    cloner($global.media.current.chapterindex.positions, backdrop, {

      source: "skin://pages/listitems/highlight.png";
      alphaSelf: iir(isFocused() * 1, 8) + isHovered() * 0.1;
      focusable: true;
      onEvent(activate, {
	$global.media.current.currenttime = $self.timestamp;
      });

      widget(container_x, {
	spacing: $ui.size;
	widget(label, {
	  color: select(isFocused(), 1.0, 0.6);
	  caption: value2duration($self.timestamp, true);
	  align: left;
	});

	widget(container_y, {
          filterConstraintX: true;
          alpha: iir($parent.media.currenttime > $self.timestamp &&
		     $parent.media.currenttime < $self.end, 8);
	  
          filterConstraintY: true;
          align: center;
          widget(container_z, {
	    widget(backdrop, {
	      border: 4;
	      height: 8;
	      source: "skin://playdecks/duration-bar-bg.png";
	    });
	    
	    widget(clip, {
	      clipping: [-1, 0, 1 - (($parent.media.currenttime - $self.timestamp) / ($self.end - $self.timestamp)), 0];
	      widget(backdrop, {
		margin: [-8, -3, -8, -5];
		border: [16, 8];
		source: "skin://playdecks/duration-bar-colorized.png";
	      });
	    });
          });
	});
	

	widget(label, {
	  filterConstraintX: true;
	  weight: 4;
	  color: select(isFocused(), 1.0, 0.6);
	  caption: $self.title;
	});
      });
    });
  );

  page: $view.page;
});


